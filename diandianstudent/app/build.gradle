apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

static def releaseTime() {
    return new Date().format("MMddHHmm", TimeZone.getTimeZone("GMT+8"))
}
android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

//    dexOptions {
//        preDexLibraries false
//        javaMaxHeapSize "3g"
//        incremental true
//        dexInProcess = true
//    }
    packagingOptions{
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    defaultConfig {
        applicationId globalConfiguration["bkApplicationId"]
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["bkVersionCode"]
        versionName globalConfiguration["bkVersionName"]

        multiDexEnabled true

        buildConfigField("boolean", "DIANSTUDENT_LIVE", "true");
        buildConfigField("boolean", "DIANSTUDENT_FALSELIVE", "false");
        buildConfigField("boolean", "DIANSTUDENT_DEV", "false");
        buildConfigField("boolean", "DIANSTUDENT_TEST", "false");
    }
    signingConfigs {
        release {
            storeFile file("../diandians.jks")
            storePassword "diandian"
            keyAlias "zhanghaitao"
            keyPassword "diandian"
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }

        DIANSTUDENTTest {
            buildConfigField("boolean", "DIANSTUDENT_LIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_FALSELIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_DEV", "false");
            buildConfigField("boolean", "DIANSTUDENT_TEST", "true");


            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANSTUDENTTest') {
                            def fileName = "DIANSTUDENT_test_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }

        DIANSTUDENTDev {
            buildConfigField("boolean", "DIANSTUDENT_LIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_FALSELIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_DEV", "true");
            buildConfigField("boolean", "DIANSTUDENT_TEST", "false");

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANSTUDENTDev') {
                            def fileName = "DIANSTUDENT_dev_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        DIANSTUDENTfalselive {
            buildConfigField("boolean", "DIANSTUDENT_LIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_FALSELIVE", "true");
            buildConfigField("boolean", "DIANSTUDENT_DEV", "false");
            buildConfigField("boolean", "DIANSTUDENT_TEST", "false");

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'DIANSTUDENTfalselive') {
                            def fileName = "DIANSTUDENT_falselive_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
        release {
            buildConfigField("boolean", "DIANSTUDENT_LIVE", "true");
            buildConfigField("boolean", "DIANSTUDENT_FALSELIVE", "false");
            buildConfigField("boolean", "DIANSTUDENT_DEV", "false");
            buildConfigField("boolean", "DIANSTUDENT_TEST", "false");

            zipAlignEnabled true

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'release') {
                            def fileName = "DIANSTUDENT_live_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
dependencies {
    def support = rootProject.ext.supportLibraryDependencies
    def core = rootProject.ext.coreLibraryDependencies
    def test = rootProject.ext.testDependencies
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile test.junit
    compile support.appcompatV7
    compile support.supportV4
    compile support.design
    compile core.gson
    compile core.rxjava
    compile core.rxandroid
    compile core.retrofit
    compile core.retrofitConverterGson
    compile core.retrofitConverterScalars
    compile core.retrofitAdapterRxjava
    compile core.okhttp
    compile core.okhttpLoggingInterceptor
    compile core.butterknife
    compile core.rxbinding
    compile core.glide
    apt core.butterknifeCompiler
    compile core.multidex
    compile core.ultra
    compile core.zxing_android_core
    compile core.zxing_core
    compile core.easypermissions
    compile 'com.alibaba:fastjson:1.2.31'
    compile 'com.alibaba:fastjson:1.1.57.android'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.1'
    //    compile 'com.orhanobut:logger:1.15'
    compile project(':PushSDK')
    compile project(':LibMarsdaemon')
    compile 'com.pgyersdk:sdk:2.4.5'
    compile 'com.lzy.net:okgo:2.1.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jaredrummler:material-spinner:1.1.0'
    compile 'com.github.Aspsine:IRecyclerView:0.0.5'
    compile 'com.yanzhenjie:permission:1.0.5'
    compile 'com.youth.banner:banner:1.4.9'
    //    compile 'com.facebook.rebound:rebound:0.3.8'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile 'com.qiniu:qiniu-android-sdk:7.3.+'
    compile project(path: ':jcvideoplayer-lib')
}